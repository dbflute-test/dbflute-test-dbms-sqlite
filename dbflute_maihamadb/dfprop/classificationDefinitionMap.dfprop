# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default map:{})
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{
#             ; topComment=[comment]; codeType=[String(default) or Number or Boolean]
#             ; undefinedHandlingType=[EXCEPTION or LOGGING(default) or ALLOWED]
#             ; isUseDocumentOnly=[true or false(default)]
#             ; isSuppressAutoDeploy=[true or false(default)]
#             ; groupingMap = map:{
#                 ; [group-name] = map:{
#                     ; groupComment=[comment]
#                     ; elementList=list:{[the list of classification element's name]}
#                 }
#             }
#         }
#         # classification elements for implicit classification
#         ; map:{
#             ; code=[code]; name=[name]; alias=[alias]; comment=[comment]
#             ; sisterCode=[code or code-list]; subItemMap=map:{[free-map]}
#         }
#         # settings for table classification
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    ; Flg = list:{
        # for the test of different code type with actual type
        ; map:{topComment=general boolean classification for every flg-column}
        ; map:{code=1;name=True ;alias=Yes ;comment=means valid}
        ; map:{code=0;name=False;alias=No  ;comment=means invalid}
    }
    ; MemberStatus = list:{
        # for the test of classification without topComment
        # and name filter for using method name
        ; map:{
            ; table=MEMBER_STATUS
            ; code=MEMBER_STATUS_CODE; name=MEMBER_STATUS_NAME
            # for the test of table classification without comment
            #; comment=DESCRIPTION
            # for the test of table classification without orderBy
            #; orderBy=DISPLAY_ORDER
        }
    }
}
# ----------------/

